{
  "meta": {
    "desc": "Functional reactive programming language for programming Arduino",
    "desc_long": "Juniper targets Arduino and supports many features typical of functional programming languages, including algebraic data types, tuples, records,\npattern matching, immutable data structures, parametric polymorphic functions, and anonymous functions (lambdas).\nSome imperative programming concepts are also present in Juniper, such as for, while and do while loops, the ability to mark variables as mutable, and mutable references.\n",
    "home": "https://www.juniper-lang.org/",
    "license": {
      "deprecated": false,
      "free": true,
      "fullName": "MIT License",
      "redistributable": true,
      "shortName": "mit",
      "spdxId": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "maintainers": [
      {
        "email": "lambdafuzz@tutanota.com",
        "github": "wunderbrick",
        "githubId": 52174714,
        "name": "Andrew Phipps"
      }
    ]
  },
  "versions": [
    {
      "first": "01a8cc220f2131698f9d959a7a7b82f2902eef09",
      "last": "04a15518c1a1fe06663e4d18d610ccd983c6fa6a",
      "name": "2.3.0"
    }
  ]
}