{
  "meta": {
    "desc": "Experimental implementation of the C++ Networking Technical Specification",
    "desc_long": null,
    "home": "https://github.com/chriskohlhoff/networking-ts-impl",
    "license": {
      "deprecated": false,
      "free": true,
      "fullName": "Boost Software License 1.0",
      "redistributable": true,
      "shortName": "boost",
      "spdxId": "BSL-1.0",
      "url": "https://spdx.org/licenses/BSL-1.0.html"
    },
    "maintainers": [
      {
        "email": "bhipple@protonmail.com",
        "github": "bhipple",
        "githubId": 2071583,
        "name": "Benjamin Hipple"
      }
    ]
  },
  "outputs": {
    "out": [
      "/include/experimental/__net_ts/associated_allocator.hpp",
      "/include/experimental/__net_ts/associated_executor.hpp",
      "/include/experimental/__net_ts/async_result.hpp",
      "/include/experimental/__net_ts/basic_datagram_socket.hpp",
      "/include/experimental/__net_ts/basic_io_object.hpp",
      "/include/experimental/__net_ts/basic_socket.hpp",
      "/include/experimental/__net_ts/basic_socket_acceptor.hpp",
      "/include/experimental/__net_ts/basic_socket_iostream.hpp",
      "/include/experimental/__net_ts/basic_socket_streambuf.hpp",
      "/include/experimental/__net_ts/basic_stream_socket.hpp",
      "/include/experimental/__net_ts/basic_waitable_timer.hpp",
      "/include/experimental/__net_ts/bind_executor.hpp",
      "/include/experimental/__net_ts/buffer.hpp",
      "/include/experimental/__net_ts/buffers_iterator.hpp",
      "/include/experimental/__net_ts/completion_condition.hpp",
      "/include/experimental/__net_ts/connect.hpp",
      "/include/experimental/__net_ts/defer.hpp",
      "/include/experimental/__net_ts/detail/array.hpp",
      "/include/experimental/__net_ts/detail/array_fwd.hpp",
      "/include/experimental/__net_ts/detail/assert.hpp",
      "/include/experimental/__net_ts/detail/atomic_count.hpp",
      "/include/experimental/__net_ts/detail/base_from_completion_cond.hpp",
      "/include/experimental/__net_ts/detail/bind_handler.hpp",
      "/include/experimental/__net_ts/detail/buffer_sequence_adapter.hpp",
      "/include/experimental/__net_ts/detail/call_stack.hpp",
      "/include/experimental/__net_ts/detail/chrono.hpp",
      "/include/experimental/__net_ts/detail/chrono_time_traits.hpp",
      "/include/experimental/__net_ts/detail/completion_handler.hpp",
      "/include/experimental/__net_ts/detail/concurrency_hint.hpp",
      "/include/experimental/__net_ts/detail/conditionally_enabled_event.hpp",
      "/include/experimental/__net_ts/detail/conditionally_enabled_mutex.hpp",
      "/include/experimental/__net_ts/detail/config.hpp",
      "/include/experimental/__net_ts/detail/consuming_buffers.hpp",
      "/include/experimental/__net_ts/detail/cstddef.hpp",
      "/include/experimental/__net_ts/detail/cstdint.hpp",
      "/include/experimental/__net_ts/detail/date_time_fwd.hpp",
      "/include/experimental/__net_ts/detail/deadline_timer_service.hpp",
      "/include/experimental/__net_ts/detail/dependent_type.hpp",
      "/include/experimental/__net_ts/detail/dev_poll_reactor.hpp",
      "/include/experimental/__net_ts/detail/epoll_reactor.hpp",
      "/include/experimental/__net_ts/detail/event.hpp",
      "/include/experimental/__net_ts/detail/eventfd_select_interrupter.hpp",
      "/include/experimental/__net_ts/detail/executor_function.hpp",
      "/include/experimental/__net_ts/detail/executor_op.hpp",
      "/include/experimental/__net_ts/detail/fd_set_adapter.hpp",
      "/include/experimental/__net_ts/detail/fenced_block.hpp",
      "/include/experimental/__net_ts/detail/functional.hpp",
      "/include/experimental/__net_ts/detail/future.hpp",
      "/include/experimental/__net_ts/detail/gcc_arm_fenced_block.hpp",
      "/include/experimental/__net_ts/detail/gcc_hppa_fenced_block.hpp",
      "/include/experimental/__net_ts/detail/gcc_sync_fenced_block.hpp",
      "/include/experimental/__net_ts/detail/gcc_x86_fenced_block.hpp",
      "/include/experimental/__net_ts/detail/global.hpp",
      "/include/experimental/__net_ts/detail/handler_alloc_helpers.hpp",
      "/include/experimental/__net_ts/detail/handler_cont_helpers.hpp",
      "/include/experimental/__net_ts/detail/handler_invoke_helpers.hpp",
      "/include/experimental/__net_ts/detail/handler_tracking.hpp",
      "/include/experimental/__net_ts/detail/handler_type_requirements.hpp",
      "/include/experimental/__net_ts/detail/handler_work.hpp",
      "/include/experimental/__net_ts/detail/hash_map.hpp",
      "/include/experimental/__net_ts/detail/impl/buffer_sequence_adapter.ipp",
      "/include/experimental/__net_ts/detail/impl/dev_poll_reactor.hpp",
      "/include/experimental/__net_ts/detail/impl/dev_poll_reactor.ipp",
      "/include/experimental/__net_ts/detail/impl/epoll_reactor.hpp",
      "/include/experimental/__net_ts/detail/impl/epoll_reactor.ipp",
      "/include/experimental/__net_ts/detail/impl/eventfd_select_interrupter.ipp",
      "/include/experimental/__net_ts/detail/impl/handler_tracking.ipp",
      "/include/experimental/__net_ts/detail/impl/kqueue_reactor.hpp",
      "/include/experimental/__net_ts/detail/impl/kqueue_reactor.ipp",
      "/include/experimental/__net_ts/detail/impl/null_event.ipp",
      "/include/experimental/__net_ts/detail/impl/pipe_select_interrupter.ipp",
      "/include/experimental/__net_ts/detail/impl/posix_event.ipp",
      "/include/experimental/__net_ts/detail/impl/posix_mutex.ipp",
      "/include/experimental/__net_ts/detail/impl/posix_thread.ipp",
      "/include/experimental/__net_ts/detail/impl/posix_tss_ptr.ipp",
      "/include/experimental/__net_ts/detail/impl/reactive_socket_service_base.ipp",
      "/include/experimental/__net_ts/detail/impl/resolver_service_base.ipp",
      "/include/experimental/__net_ts/detail/impl/scheduler.ipp",
      "/include/experimental/__net_ts/detail/impl/select_reactor.hpp",
      "/include/experimental/__net_ts/detail/impl/select_reactor.ipp",
      "/include/experimental/__net_ts/detail/impl/service_registry.hpp",
      "/include/experimental/__net_ts/detail/impl/service_registry.ipp",
      "/include/experimental/__net_ts/detail/impl/socket_ops.ipp",
      "/include/experimental/__net_ts/detail/impl/socket_select_interrupter.ipp",
      "/include/experimental/__net_ts/detail/impl/strand_executor_service.hpp",
      "/include/experimental/__net_ts/detail/impl/strand_executor_service.ipp",
      "/include/experimental/__net_ts/detail/impl/throw_error.ipp",
      "/include/experimental/__net_ts/detail/impl/timer_queue_ptime.ipp",
      "/include/experimental/__net_ts/detail/impl/timer_queue_set.ipp",
      "/include/experimental/__net_ts/detail/impl/win_event.ipp",
      "/include/experimental/__net_ts/detail/impl/win_iocp_io_context.hpp",
      "/include/experimental/__net_ts/detail/impl/win_iocp_io_context.ipp",
      "/include/experimental/__net_ts/detail/impl/win_iocp_socket_service_base.ipp",
      "/include/experimental/__net_ts/detail/impl/win_mutex.ipp",
      "/include/experimental/__net_ts/detail/impl/win_static_mutex.ipp",
      "/include/experimental/__net_ts/detail/impl/win_thread.ipp",
      "/include/experimental/__net_ts/detail/impl/win_tss_ptr.ipp",
      "/include/experimental/__net_ts/detail/impl/winrt_ssocket_service_base.ipp",
      "/include/experimental/__net_ts/detail/impl/winrt_timer_scheduler.hpp",
      "/include/experimental/__net_ts/detail/impl/winrt_timer_scheduler.ipp",
      "/include/experimental/__net_ts/detail/impl/winsock_init.ipp",
      "/include/experimental/__net_ts/detail/io_control.hpp",
      "/include/experimental/__net_ts/detail/is_buffer_sequence.hpp",
      "/include/experimental/__net_ts/detail/is_executor.hpp",
      "/include/experimental/__net_ts/detail/keyword_tss_ptr.hpp",
      "/include/experimental/__net_ts/detail/kqueue_reactor.hpp",
      "/include/experimental/__net_ts/detail/limits.hpp",
      "/include/experimental/__net_ts/detail/local_free_on_block_exit.hpp",
      "/include/experimental/__net_ts/detail/macos_fenced_block.hpp",
      "/include/experimental/__net_ts/detail/memory.hpp",
      "/include/experimental/__net_ts/detail/mutex.hpp",
      "/include/experimental/__net_ts/detail/noncopyable.hpp",
      "/include/experimental/__net_ts/detail/null_event.hpp",
      "/include/experimental/__net_ts/detail/null_fenced_block.hpp",
      "/include/experimental/__net_ts/detail/null_global.hpp",
      "/include/experimental/__net_ts/detail/null_mutex.hpp",
      "/include/experimental/__net_ts/detail/null_reactor.hpp",
      "/include/experimental/__net_ts/detail/null_signal_blocker.hpp",
      "/include/experimental/__net_ts/detail/null_socket_service.hpp",
      "/include/experimental/__net_ts/detail/null_static_mutex.hpp",
      "/include/experimental/__net_ts/detail/null_thread.hpp",
      "/include/experimental/__net_ts/detail/null_tss_ptr.hpp",
      "/include/experimental/__net_ts/detail/object_pool.hpp",
      "/include/experimental/__net_ts/detail/old_win_sdk_compat.hpp",
      "/include/experimental/__net_ts/detail/op_queue.hpp",
      "/include/experimental/__net_ts/detail/operation.hpp",
      "/include/experimental/__net_ts/detail/pipe_select_interrupter.hpp",
      "/include/experimental/__net_ts/detail/pop_options.hpp",
      "/include/experimental/__net_ts/detail/posix_event.hpp",
      "/include/experimental/__net_ts/detail/posix_fd_set_adapter.hpp",
      "/include/experimental/__net_ts/detail/posix_global.hpp",
      "/include/experimental/__net_ts/detail/posix_mutex.hpp",
      "/include/experimental/__net_ts/detail/posix_signal_blocker.hpp",
      "/include/experimental/__net_ts/detail/posix_static_mutex.hpp",
      "/include/experimental/__net_ts/detail/posix_thread.hpp",
      "/include/experimental/__net_ts/detail/posix_tss_ptr.hpp",
      "/include/experimental/__net_ts/detail/push_options.hpp",
      "/include/experimental/__net_ts/detail/reactive_null_buffers_op.hpp",
      "/include/experimental/__net_ts/detail/reactive_socket_accept_op.hpp",
      "/include/experimental/__net_ts/detail/reactive_socket_connect_op.hpp",
      "/include/experimental/__net_ts/detail/reactive_socket_recv_op.hpp",
      "/include/experimental/__net_ts/detail/reactive_socket_recvfrom_op.hpp",
      "/include/experimental/__net_ts/detail/reactive_socket_recvmsg_op.hpp",
      "/include/experimental/__net_ts/detail/reactive_socket_send_op.hpp",
      "/include/experimental/__net_ts/detail/reactive_socket_sendto_op.hpp",
      "/include/experimental/__net_ts/detail/reactive_socket_service.hpp",
      "/include/experimental/__net_ts/detail/reactive_socket_service_base.hpp",
      "/include/experimental/__net_ts/detail/reactive_wait_op.hpp",
      "/include/experimental/__net_ts/detail/reactor.hpp",
      "/include/experimental/__net_ts/detail/reactor_fwd.hpp",
      "/include/experimental/__net_ts/detail/reactor_op.hpp",
      "/include/experimental/__net_ts/detail/reactor_op_queue.hpp",
      "/include/experimental/__net_ts/detail/recycling_allocator.hpp",
      "/include/experimental/__net_ts/detail/regex_fwd.hpp",
      "/include/experimental/__net_ts/detail/resolve_endpoint_op.hpp",
      "/include/experimental/__net_ts/detail/resolve_op.hpp",
      "/include/experimental/__net_ts/detail/resolve_query_op.hpp",
      "/include/experimental/__net_ts/detail/resolver_service.hpp",
      "/include/experimental/__net_ts/detail/resolver_service_base.hpp",
      "/include/experimental/__net_ts/detail/scheduler.hpp",
      "/include/experimental/__net_ts/detail/scheduler_operation.hpp",
      "/include/experimental/__net_ts/detail/scheduler_thread_info.hpp",
      "/include/experimental/__net_ts/detail/scoped_lock.hpp",
      "/include/experimental/__net_ts/detail/scoped_ptr.hpp",
      "/include/experimental/__net_ts/detail/select_interrupter.hpp",
      "/include/experimental/__net_ts/detail/select_reactor.hpp",
      "/include/experimental/__net_ts/detail/service_registry.hpp",
      "/include/experimental/__net_ts/detail/signal_blocker.hpp",
      "/include/experimental/__net_ts/detail/signal_init.hpp",
      "/include/experimental/__net_ts/detail/socket_holder.hpp",
      "/include/experimental/__net_ts/detail/socket_ops.hpp",
      "/include/experimental/__net_ts/detail/socket_option.hpp",
      "/include/experimental/__net_ts/detail/socket_select_interrupter.hpp",
      "/include/experimental/__net_ts/detail/socket_types.hpp",
      "/include/experimental/__net_ts/detail/solaris_fenced_block.hpp",
      "/include/experimental/__net_ts/detail/static_mutex.hpp",
      "/include/experimental/__net_ts/detail/std_event.hpp",
      "/include/experimental/__net_ts/detail/std_fenced_block.hpp",
      "/include/experimental/__net_ts/detail/std_global.hpp",
      "/include/experimental/__net_ts/detail/std_mutex.hpp",
      "/include/experimental/__net_ts/detail/std_static_mutex.hpp",
      "/include/experimental/__net_ts/detail/std_thread.hpp",
      "/include/experimental/__net_ts/detail/strand_executor_service.hpp",
      "/include/experimental/__net_ts/detail/string_view.hpp",
      "/include/experimental/__net_ts/detail/thread.hpp",
      "/include/experimental/__net_ts/detail/thread_context.hpp",
      "/include/experimental/__net_ts/detail/thread_group.hpp",
      "/include/experimental/__net_ts/detail/thread_info_base.hpp",
      "/include/experimental/__net_ts/detail/throw_error.hpp",
      "/include/experimental/__net_ts/detail/throw_exception.hpp",
      "/include/experimental/__net_ts/detail/timer_queue.hpp",
      "/include/experimental/__net_ts/detail/timer_queue_base.hpp",
      "/include/experimental/__net_ts/detail/timer_queue_ptime.hpp",
      "/include/experimental/__net_ts/detail/timer_queue_set.hpp",
      "/include/experimental/__net_ts/detail/timer_scheduler.hpp",
      "/include/experimental/__net_ts/detail/timer_scheduler_fwd.hpp",
      "/include/experimental/__net_ts/detail/tss_ptr.hpp",
      "/include/experimental/__net_ts/detail/type_traits.hpp",
      "/include/experimental/__net_ts/detail/variadic_templates.hpp",
      "/include/experimental/__net_ts/detail/wait_handler.hpp",
      "/include/experimental/__net_ts/detail/wait_op.hpp",
      "/include/experimental/__net_ts/detail/win_event.hpp",
      "/include/experimental/__net_ts/detail/win_fd_set_adapter.hpp",
      "/include/experimental/__net_ts/detail/win_fenced_block.hpp",
      "/include/experimental/__net_ts/detail/win_global.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_io_context.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_null_buffers_op.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_operation.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_socket_accept_op.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_socket_connect_op.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_socket_recv_op.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_socket_recvfrom_op.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_socket_recvmsg_op.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_socket_send_op.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_socket_service.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_socket_service_base.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_thread_info.hpp",
      "/include/experimental/__net_ts/detail/win_iocp_wait_op.hpp",
      "/include/experimental/__net_ts/detail/win_mutex.hpp",
      "/include/experimental/__net_ts/detail/win_static_mutex.hpp",
      "/include/experimental/__net_ts/detail/win_thread.hpp",
      "/include/experimental/__net_ts/detail/win_tss_ptr.hpp",
      "/include/experimental/__net_ts/detail/winapp_thread.hpp",
      "/include/experimental/__net_ts/detail/wince_thread.hpp",
      "/include/experimental/__net_ts/detail/winrt_async_manager.hpp",
      "/include/experimental/__net_ts/detail/winrt_async_op.hpp",
      "/include/experimental/__net_ts/detail/winrt_resolve_op.hpp",
      "/include/experimental/__net_ts/detail/winrt_resolver_service.hpp",
      "/include/experimental/__net_ts/detail/winrt_socket_connect_op.hpp",
      "/include/experimental/__net_ts/detail/winrt_socket_recv_op.hpp",
      "/include/experimental/__net_ts/detail/winrt_socket_send_op.hpp",
      "/include/experimental/__net_ts/detail/winrt_ssocket_service.hpp",
      "/include/experimental/__net_ts/detail/winrt_ssocket_service_base.hpp",
      "/include/experimental/__net_ts/detail/winrt_timer_scheduler.hpp",
      "/include/experimental/__net_ts/detail/winrt_utils.hpp",
      "/include/experimental/__net_ts/detail/winsock_init.hpp",
      "/include/experimental/__net_ts/detail/work_dispatcher.hpp",
      "/include/experimental/__net_ts/detail/wrapped_handler.hpp",
      "/include/experimental/__net_ts/dispatch.hpp",
      "/include/experimental/__net_ts/error.hpp",
      "/include/experimental/__net_ts/execution_context.hpp",
      "/include/experimental/__net_ts/executor.hpp",
      "/include/experimental/__net_ts/executor_work_guard.hpp",
      "/include/experimental/__net_ts/handler_alloc_hook.hpp",
      "/include/experimental/__net_ts/handler_continuation_hook.hpp",
      "/include/experimental/__net_ts/handler_invoke_hook.hpp",
      "/include/experimental/__net_ts/handler_type.hpp",
      "/include/experimental/__net_ts/high_resolution_timer.hpp",
      "/include/experimental/__net_ts/impl/connect.hpp",
      "/include/experimental/__net_ts/impl/defer.hpp",
      "/include/experimental/__net_ts/impl/dispatch.hpp",
      "/include/experimental/__net_ts/impl/error.ipp",
      "/include/experimental/__net_ts/impl/execution_context.hpp",
      "/include/experimental/__net_ts/impl/execution_context.ipp",
      "/include/experimental/__net_ts/impl/executor.hpp",
      "/include/experimental/__net_ts/impl/executor.ipp",
      "/include/experimental/__net_ts/impl/handler_alloc_hook.ipp",
      "/include/experimental/__net_ts/impl/io_context.hpp",
      "/include/experimental/__net_ts/impl/io_context.ipp",
      "/include/experimental/__net_ts/impl/post.hpp",
      "/include/experimental/__net_ts/impl/read.hpp",
      "/include/experimental/__net_ts/impl/read_until.hpp",
      "/include/experimental/__net_ts/impl/src.hpp",
      "/include/experimental/__net_ts/impl/system_context.hpp",
      "/include/experimental/__net_ts/impl/system_context.ipp",
      "/include/experimental/__net_ts/impl/system_executor.hpp",
      "/include/experimental/__net_ts/impl/use_future.hpp",
      "/include/experimental/__net_ts/impl/write.hpp",
      "/include/experimental/__net_ts/io_context.hpp",
      "/include/experimental/__net_ts/ip/address.hpp",
      "/include/experimental/__net_ts/ip/address_v4.hpp",
      "/include/experimental/__net_ts/ip/address_v4_iterator.hpp",
      "/include/experimental/__net_ts/ip/address_v4_range.hpp",
      "/include/experimental/__net_ts/ip/address_v6.hpp",
      "/include/experimental/__net_ts/ip/address_v6_iterator.hpp",
      "/include/experimental/__net_ts/ip/address_v6_range.hpp",
      "/include/experimental/__net_ts/ip/bad_address_cast.hpp",
      "/include/experimental/__net_ts/ip/basic_endpoint.hpp",
      "/include/experimental/__net_ts/ip/basic_resolver.hpp",
      "/include/experimental/__net_ts/ip/basic_resolver_entry.hpp",
      "/include/experimental/__net_ts/ip/basic_resolver_iterator.hpp",
      "/include/experimental/__net_ts/ip/basic_resolver_query.hpp",
      "/include/experimental/__net_ts/ip/basic_resolver_results.hpp",
      "/include/experimental/__net_ts/ip/detail/endpoint.hpp",
      "/include/experimental/__net_ts/ip/detail/impl/endpoint.ipp",
      "/include/experimental/__net_ts/ip/detail/socket_option.hpp",
      "/include/experimental/__net_ts/ip/host_name.hpp",
      "/include/experimental/__net_ts/ip/impl/address.hpp",
      "/include/experimental/__net_ts/ip/impl/address.ipp",
      "/include/experimental/__net_ts/ip/impl/address_v4.hpp",
      "/include/experimental/__net_ts/ip/impl/address_v4.ipp",
      "/include/experimental/__net_ts/ip/impl/address_v6.hpp",
      "/include/experimental/__net_ts/ip/impl/address_v6.ipp",
      "/include/experimental/__net_ts/ip/impl/basic_endpoint.hpp",
      "/include/experimental/__net_ts/ip/impl/host_name.ipp",
      "/include/experimental/__net_ts/ip/impl/network_v4.hpp",
      "/include/experimental/__net_ts/ip/impl/network_v4.ipp",
      "/include/experimental/__net_ts/ip/impl/network_v6.hpp",
      "/include/experimental/__net_ts/ip/impl/network_v6.ipp",
      "/include/experimental/__net_ts/ip/multicast.hpp",
      "/include/experimental/__net_ts/ip/network_v4.hpp",
      "/include/experimental/__net_ts/ip/network_v6.hpp",
      "/include/experimental/__net_ts/ip/resolver_base.hpp",
      "/include/experimental/__net_ts/ip/resolver_query_base.hpp",
      "/include/experimental/__net_ts/ip/resolver_service.hpp",
      "/include/experimental/__net_ts/ip/tcp.hpp",
      "/include/experimental/__net_ts/ip/udp.hpp",
      "/include/experimental/__net_ts/ip/unicast.hpp",
      "/include/experimental/__net_ts/ip/v6_only.hpp",
      "/include/experimental/__net_ts/is_executor.hpp",
      "/include/experimental/__net_ts/packaged_task.hpp",
      "/include/experimental/__net_ts/post.hpp",
      "/include/experimental/__net_ts/read.hpp",
      "/include/experimental/__net_ts/read_until.hpp",
      "/include/experimental/__net_ts/socket_base.hpp",
      "/include/experimental/__net_ts/steady_timer.hpp",
      "/include/experimental/__net_ts/strand.hpp",
      "/include/experimental/__net_ts/system_context.hpp",
      "/include/experimental/__net_ts/system_executor.hpp",
      "/include/experimental/__net_ts/system_timer.hpp",
      "/include/experimental/__net_ts/ts/buffer.hpp",
      "/include/experimental/__net_ts/ts/executor.hpp",
      "/include/experimental/__net_ts/ts/internet.hpp",
      "/include/experimental/__net_ts/ts/io_context.hpp",
      "/include/experimental/__net_ts/ts/net.hpp",
      "/include/experimental/__net_ts/ts/netfwd.hpp",
      "/include/experimental/__net_ts/ts/socket.hpp",
      "/include/experimental/__net_ts/ts/timer.hpp",
      "/include/experimental/__net_ts/use_future.hpp",
      "/include/experimental/__net_ts/uses_executor.hpp",
      "/include/experimental/__net_ts/wait_traits.hpp",
      "/include/experimental/__net_ts/write.hpp",
      "/include/experimental/buffer",
      "/include/experimental/executor",
      "/include/experimental/internet",
      "/include/experimental/io_context",
      "/include/experimental/net",
      "/include/experimental/netfwd",
      "/include/experimental/socket",
      "/include/experimental/timer",
      "/lib/pkgconfig/networking_ts.pc"
    ]
  },
  "versions": [
    {
      "commits": [
        {
          "first": "049322de7cc036fa548c2ae2861e97c1dd9fa855",
          "last": "00460bd6e2c89f3b76dcb42032194e6eed0616d2"
        }
      ],
      "name": "2019-02-27"
    }
  ]
}