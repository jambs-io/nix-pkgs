{
  "meta": {
    "desc": "Yet Another Python Formatter",
    "desc_long": "Most of the current formatters for Python --- e.g., autopep8, and pep8ify\n--- are made to remove lint errors from code. This has some obvious\nlimitations. For instance, code that conforms to the PEP 8 guidelines may\nnot be reformatted. But it doesn't mean that the code looks good.\n\nYAPF takes a different approach. It's based off of 'clang-format',\ndeveloped by Daniel Jasper. In essence, the algorithm takes the code and\nreformats it to the best formatting that conforms to the style guide, even\nif the original code didn't violate the style guide. The idea is also\nsimilar to the 'gofmt' tool for the Go programming language: end all holy\nwars about formatting - if the whole codebase of a project is simply piped\nthrough YAPF whenever modifications are made, the style remains consistent\nthroughout the project and there's no point arguing about style in every\ncode review.\n\nThe ultimate goal is that the code YAPF produces is as good as the code\nthat a programmer would write if they were following the style guide. It\ntakes away some of the drudgery of maintaining your code.\n",
    "home": "https://github.com/google/yapf",
    "license": {
      "deprecated": false,
      "free": true,
      "fullName": "Apache License 2.0",
      "redistributable": true,
      "shortName": "asl20",
      "spdxId": "Apache-2.0",
      "url": "https://spdx.org/licenses/Apache-2.0.html"
    },
    "maintainers": [
      {
        "email": "torres.anderson.85@protonmail.com",
        "github": "AndersonTorres",
        "githubId": 5954806,
        "name": "Anderson Torres"
      },
      {
        "email": "langston.barrett@gmail.com",
        "github": "langston-barrett",
        "githubId": 4294323,
        "name": "Langston Barrett"
      }
    ]
  },
  "versions": [
    {
      "first": "03e50cf1392623f410a5e8847500d78ec8a5ef5d",
      "last": "04a15518c1a1fe06663e4d18d610ccd983c6fa6a",
      "name": "0.31.0"
    },
    {
      "first": "064e0af80b574bfe96540f17ddd35d6e0b1d5c71",
      "last": "064e0af80b574bfe96540f17ddd35d6e0b1d5c71",
      "name": "0.30.0"
    },
    {
      "first": "06dee38345cbad53ddfa7616a962be49777b1a72",
      "last": "0139874db9bca4be6f54c52f2da40e8ac7c5237b",
      "name": "0.31.0"
    },
    {
      "first": "064b446fc0c7b79f05c6fac6b8da23eb18340d50",
      "last": "064b446fc0c7b79f05c6fac6b8da23eb18340d50",
      "name": "0.30.0"
    },
    {
      "first": "036646460b4729e3e5293ef4e992fe320c29cebb",
      "last": "031da799889d0037e480a6171ba221fa79c9ddfd",
      "name": "0.31.0"
    },
    {
      "first": "0661cf48823bc0ec6aa8aecfef5debfb8b2d4dd4",
      "last": "0661cf48823bc0ec6aa8aecfef5debfb8b2d4dd4",
      "name": "0.30.0"
    },
    {
      "first": "03f9e1979d82a0ce3a73810eed385d2bb84c811c",
      "last": "0253164612f7f83e45cbda92ab69bfca038ce8bf",
      "name": "0.31.0"
    },
    {
      "first": "045e01aae6adaf512b370bd046c5f1ae7ba8909a",
      "last": "045e01aae6adaf512b370bd046c5f1ae7ba8909a",
      "name": "0.30.0"
    },
    {
      "first": "06a97102829a0e98230e5f7efe40968f346dec8a",
      "last": "062e1ffa1ba918c2c94a5988c60765247c0aa95c",
      "name": "0.31.0"
    },
    {
      "first": "02ac13b563c082eaa51e8acdbe492a7961231836",
      "last": "0206bf6d7539c68108d100d46967983fc578ad4b",
      "name": "0.30.0"
    }
  ]
}